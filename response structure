from rest_framework.response import Response



def server_error_response(message="Internal server error", error_detail=None):
    response = {
        "success": False,
        "message": message,
    }
    if error_detail:
        response["error"] = str(error_detail)
    return Response(response, status=500)


def success_(message: str="success", response: dict={}):
    res_array = {
        "success": True,
        "error_code": -1,
        "message": message,
        "data": response,
    }
    return res_array
 
 
# returns error response
def error_(
    message: str="failed",
    error_code: int=1001,
    response: dict=None,
):
 
    res_array = {
        "success": False,
        "error_code": error_code,
        "message": message,
        "data": response,
    }
    return res_array


#calling 
return Response(
                success_(response=serializer.data, message="Onboarding step set to 6"),
                status=status.HTTP_200_OK
                )  
        except Exception as e:
            return Response(
                error_(response={}, message= str(e)),
                status=status.HTTP_400_BAD_REQUEST
            ) 
