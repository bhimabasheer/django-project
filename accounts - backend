from users.models import Users
from django.db.models import Q
import logging

# Set up logging for the backend
logger = logging.getLogger(__name__)

class MultiFieldAuthBackend:
    """
    Custom authentication backend that allows users to log in using email, phone, or AEC ID.
    It attempts to authenticate the user based on these fields.
    """
    def authenticate(self, request, username=None, password=None, **kwargs):
        try:
            # Attempt to get the user by any of the provided fields (email, phone, or aec_id)
            user = Users.objects.get(
                Q(email=username) | Q(phone=username) | Q(aec_id=username)
            )
        except Users.DoesNotExist:
            # Log the failed authentication attempt
            logger.warning(f"Authentication failed for {username}. User not found.")
            return None

        # Check if the password matches
        if user.check_password(password):
            return user
        else:
            logger.warning(f"Invalid password attempt for {username}.")
            return None

    def get_user(self, user_id):
        try:
            return Users.objects.get(pk=user_id)
        except Users.DoesNotExist:
            return None
